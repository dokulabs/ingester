name: Release

on:
  push:
    tags: [ '*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    outputs: 
      tags: ${{ steps.set-tags-output.outputs.tags }}
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        with:
          platforms: linux/arm64/v8,linux/arm/v8

      - name: Code Format Check (gofmt)
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go code is not formatted:"
            gofmt -d .
            exit 1
          fi

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Set tag output
        id: set-tags-output
        run: echo "tags=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT
  
  binaries:
    name: Publish binaries
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - {os: "linux", arch: "amd64"}
          - {os: "linux", arch: "arm64"}
          - {os: "linux", arch: "arm"}
          - {os: "linux", arch: "ppc64le"}
          - {os: "windows", arch: "amd64"}
          - {os: "windows", arch: "386"}
          - {os: "darwin", arch: "amd64"}
          - {os: "darwin", arch: "arm64"}
    
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-go@v4
      with:
        go-version: '1.21.5'

    - name: Build package for ${{ matrix.platform.os }}-${{ matrix.platform.arch }}
      working-directory: ./src
      run: env GOOS=${{ matrix.platform.os }} GOARCH=${{ matrix.platform.arch }} go build -o ingester-${{ matrix.platform.os }}-${{ matrix.platform.arch }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: src/ingester-${{ matrix.platform.os }}-${{ matrix.platform.arch }}
        asset_name: ingester-${{ matrix.platform.os }}-${{ matrix.platform.arch }}
        tag: ${{ needs.docker.outputs.tags }}
        overwrite: true
